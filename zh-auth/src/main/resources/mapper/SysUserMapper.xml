<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.zhenghao.zh.auth.dao.SysUserMapper">

	<select id="listForPage" resultType="SysUserEntity" flushCache="true">
		SELECT
			user_id,
			org_id,
			username,
			`name`,
			email,
			mobile,
			avatar,
			status,
			create_time
		FROM
			sys_user
		<where>
			<if test="creatorId != null">
				AND creator_id = #{creatorId}
			</if>
			<if test="username != null and username.trim() != ''">
				AND (username LIKE concat('%',#{username},'%') OR `name` LIKE concat('%',#{username},'%'))
			</if>
			<if test="status != null and status.trim() != ''">
				AND status = #{status}
			</if>
			<if test="orgId != null and orgId != 0">
				AND (org_id = #{orgId} OR org_id IN ( SELECT o.org_id FROM sys_org o WHERE FIND_IN_SET (#{orgId}, ancestors) ))
			</if>
		</where>
		<choose>
			<when test="sortOrder != null and sortOrder == 'ascend'">
				ORDER BY create_time
			</when>
			<when test="sortOrder != null and sortOrder == 'descend'">
				ORDER BY create_time DESC
			</when>
			<otherwise>
				ORDER BY user_id DESC
			</otherwise>
		</choose>
	</select>

	<select id="getCountByUserName" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			sys_user
		WHERE
			username = #{username}
	</select>

	<select id="getCountByOrgId" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			sys_user
		WHERE
			org_id = #{orgId}
	</select>
	
	<select id="getByUserName" resultType="SysUserEntity">
		SELECT
			user_id,
			org_id,
			username,
			password,
			`name`,
			email,
			mobile,
			avatar,
			status
		FROM
			sys_user
		WHERE
			username = #{username}
	</select>
	
	
	<select id="listAllMenuId" resultType="long">
		SELECT DISTINCT
			rm.menu_id
		FROM
			sys_user_role ur
		LEFT JOIN sys_role_menu rm ON ur.role_id = rm.role_id
		WHERE
			ur.user_id = #{userId}
	</select>

	<insert id="save" parameterType="SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO sys_user (
			org_id,
			username,
			password,
			`name`,
			email,
			mobile,
			avatar,
			status,
			creator_id,
			create_time
		)
		VALUES (
			#{orgId,},
			#{username},
			#{password},
			#{name},
			#{email},
			#{mobile},
			#{avatar},
			#{status},
			#{creatorId},
			NOW()
		)
	</insert>

	<select id="getObjectById" resultType="SysUserEntity">
		SELECT
			user_id,
			org_id,
			username,
			`name`,
			email,
			mobile,
			avatar,
			theme,
			color,
			status
		FROM 
			sys_user
		WHERE
			user_id = #{value}
	</select>
	
	<update id="update">
		UPDATE sys_user
		<set> 
			<if test="orgId != null">org_id = #{orgId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="email != null">email = #{email}, </if>
			<if test="mobile != null">mobile = #{mobile}, </if>
			<if test="avatar != null">avatar = #{avatar}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="modifierId != null">modifier_id = #{modifierId},</if>
			modified_time = NOW()
		</set>
		where user_id = #{userId}
	</update>

	<delete id="remove">
		DELETE
		FROM
			sys_user
		WHERE
			user_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		DELETE
		FROM
			sys_user
		WHERE
			user_id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<update id="updatePasswordByUser">
		UPDATE sys_user
		SET
			password = #{newPassword}
		WHERE
			user_id = #{userId} AND password = #{password}
	</update>
	
	
	<update id="updateUserStatus">
		UPDATE sys_user
		SET
			status = #{status}
		WHERE
			user_id IN
		<foreach item="userId" collection="ids" open="(" separator="," close=")">
			#{userId}
		</foreach> 
	</update>
	
	
	<update id="updatePassword">
		UPDATE sys_user
		SET
			password = #{password}
		WHERE
			user_id = #{userId}
	</update>

	<update id="updateThemeByUserId">
		UPDATE sys_user
		SET
			theme = #{theme}
		WHERE
			user_id = #{userId}
	</update>

	<update id="updateColorByUserId">
		UPDATE sys_user
		SET
			color = #{color}
		WHERE
			user_id = #{userId}
	</update>
	
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
</mapper>